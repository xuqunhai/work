demo:
function Car () {
    this.color = "red";
}
Car.prototype.sayHi=function(){
  console.log('你好')
}
var car = new Car();
var car2 = Object.create(Car);
console.log(car.color)    // red
console.log(car.sayHi())  // 你好
console.log(car2.color)    // undefined
console.log(car2.sayHi  // undefined

分析:
var car = new Car()
1 创建空对象，如o = {};
2 把该对象的原型指向构造函数原型,o.__proto__=Car.prototype;
3 调用构造函数，并把this指向o;

var car2 = Object.create(Car)
得到的是一个实例对象，他的构造函数的原型指向传入的Car;
car2.__proto__ === Car; // true
并且他不会调用构造函数,因为传入的并不是构造函数;