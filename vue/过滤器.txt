内置过滤器

现在2.x过滤器只能用在插入文本中 ({{ }} tags)。
我们发现在指令 (如：v-model，v-on 等) 中使用过滤器使事情变得更复杂。
像 v-for 这样的列表过滤器最好把处理逻辑作为一个计算属性放在 js 里面，这样就可以在整个模板中复用。
总之，能在原生 js 中实现的东西，我们尽量避免引入一个新的符号去重复处理同样的问题。

首字母转大写capitalize - > value.charAt(0).toUpperCase()+value.slice(1)
大写uppercase -> value.toString().toUpperCase()
小写lowercase
json.stringify - > {{ message | json(4) }}
limitBy
filterBy
orderBy
currency货币形式输出

双向过滤器
Vue.filter(id, {
    read: function(val){},
    write: function(new, old){}
})

过滤器重名会覆盖，也会覆盖内置过滤器；
过滤器函数最好返回有意义的值；

管道源码解析
获取过滤器和参数后，整理输出为对象
{
    expression: 'a+1',
    filters: [
        {
            name: 'uppercase', args: null
        }
    ]
}
然后将表达式值作为参数，依次调用filters数组中过滤器函数，最后输出结果；

采用Vue.filter需要在实例化Vue前定义，否则不起作用；