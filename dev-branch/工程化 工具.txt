https://img.w3ctech.com/vue_conf_zhangyaochun.pdf
vue init 按照指定模板，在指定目录生成项目结构
vue list 列出线上 vuejs-templates repo 支持的模板列表

本地开发
Express + 多个中间件：
ü connect-history-api-fallback
ü webpack-hot-middleware
ü http-proxy-middleware
ü express.static

vendor 和 app 打包之后都强依赖 manifest 文件的：webpackJsonp()
如果是 CDN 文件，时序问题随即而来,
所以最好把manifest内联，此时可以使用:
html-webpack-inline-source-plugin


问题： loader	默认都是一个进程在跑
解法：多进程、缓存
happypack
多进程:
webpack -> HappyLoader -> HappyPlugin -> HappyThreadPool -> 多个进程HappyThread -> 每个进程有个HappyWorkerChannel -(runs)-> HappyWorker -(handle)-> 多个webpack-loader;
缓存: 
webpack -> HappyLoader -> HappyPlugin -> HappyFSCache -> FileSystem;

如何处理.vue组件文件?
vueify -> /.vue$/.test(file) -> through(write, end) -(依赖vue-component-compiler)-> compiler.compile -> parser.parseFragment(content) -> childNodes.forEach ->
template -(compilers)-> __vue_template__
style -(compilers)-> insert-css
script

vue-loader处理.vue文件的三部分: template, script, styles;
postcss在vue-loader扮演什么?
scoped scc的实现，data-v-xxx中的xxx和路径有关，和内容无关；

yarn比npm安全，因为npm publisher可被恶意使用;而且有离线模式;
但是不支持除了npm registry外其他安装方式;使用yarn add/remove;


一些工具编写的收获:
获取当前运行环境Node.js的版本号：
var currentNodeVersion =	process.versions.node;
检测项目创建的名称是否合法：
validate-npm-package-name
如何获取当前 git 配置的用户：
require('child_process').execSync('git config --get	user.name')
require('child_process').execSync('git config --get	user.	email')
获取 npm 的版本：
require('child_process').execSync('npm --version').toString()
模板引擎哪个好？
我们推荐 consolidate，支持市面上基本所有的模板引擎
监控某个端口是否被占用：
react-scripts 里面有 detect-port
如何判断是否连网：
dns.resolve(‘registry.yarnpkg.com’,	function(err)	{})