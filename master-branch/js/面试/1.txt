如何理解 Web 语义化？
让机器可以读懂内容。互联网信息处理的自动化、智能化。
应该充分的考虑到可怜的机器人非常弱的理解能力，尽量说一些约定俗称的东西，这样机器人就可以帮我们进行一些我们人类不太擅长但是它很擅长的推理计算了。那么最好我们能够让我们的文档在描述相关的本体的时候使用计算机更容易理解的结构，这就是语义化。
Web语义化有三个阶段
1、浏览器和W3C组织推出的如h1~h6、thead、ul、ol的HTML标签，搜索引擎很好的利用了这些语义化标签抓取内容
2、但Web的发展超乎想象，起初定义的HTML语义化标签，不足以实现对Web页面各个部分的功能或位置描述，利用HTML标签的id和class属性，进一步对HTML标签进行描述，如对页脚HTML标签添加如id="footer"或者class="footer"的属性（值）
3、W3C组织意识到了之前HTML版本的不足，推出的HTML5进一步推进了Web语义化发展，采用了诸如footer、section等语义化标签，弥补了采用id="footer"或者class="footer"形式的不足

用户跟我们的代码语义化有什么关系呢，其实直接关系并不大，最重要的是间接关系，这个关系由互联网做连接。
小爬虫的智商比较低，同时比较懒，喜欢刚到门口不进去就能猜到门里面是什么。如果我们在门上贴个标签表明这个房间里有什么，那么小爬虫就省去了进屋这个流程，还能够得知门后的内容，大大提升了爬虫的速度，从而提升用户体验，贴在门上的这个标签就是语义化；反之如果不在门口贴标签或者贴一些莫名其妙的标签，不仅增加了爬虫辨识的时间，还有可能产生错误的误导，导致降低用户体验甚至产生一些不好的后果。



浏览器解析HTML方式
目的是要告诉标准通用标记语言解析器，它应该使用什么样的文档类型定义（DTD）来解析文档。Doctype还会对浏览器的渲染模式产生影响，不同的渲染模式会影响到浏览器对于 CSS 代码甚至 JavaScript 脚本的解析
有三种解析方式:
非怪异（标准）模式
怪异模式
部分怪异（近乎标准）模式

一个不含任何 DOCTYPE 的网页将会以 怪异(quirks) 模式渲染。
HTML5提供的<DOCTYPE html>是标准模式，向后兼容的, 等同于开启了标准模式，那么浏览器就得老老实实的按照W3C的 标准解析渲染页面，
