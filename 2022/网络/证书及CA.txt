浏览器怎么确定访问目标是可信的，而不是被其它第三方假冒的？
受访问的服务需要提供能证明自己身份的东西，这就引出了->证书。 
但是怎么证明证书是有效的？ 假冒的服务器也可以有证书，
所以证书上要有一个可信的标识，代表它是经过认证的，这个标识就是-> 签名；
那这个签名又是咋来的？ 总不能服务自己给自己签吧... 
所以需要一个特殊的机构来进行，这个机构是大家公认的可靠第三方，只要证书有它的签名，就可以信任这个证书，这个机构就是CA(certificate authority)

C公司专门开设了一项“代理公章”的业务。
　　今后，A 公司的业务员去B公司，需要带2个介绍信：
　　介绍信1
　　含有 C 公司的公章及 A 公司的公章。并且特地注明：C 公司信任A公司。
　　介绍信2
　　仅含有 A 公司的公章，然后写上：兹有张三先生前往贵公司办理业务，请给予接洽......云云。
主要的好处在于，对于接待公司的前台，就不需要记住各个公司的公章分别是啥样子的；他/她只要记住中介公司 C 的公章即可。
当他/她拿到两份介绍信之后，先对“介绍信1”的 C 公章，验明正身；
确认无误之后，再比对“介绍信1”和“介绍信2”的两个 A 公章是否一致。
如果是一样的，那就可以证明“介绍信2”是可以信任的了。

“证书”洋文也叫“digital certificate”或“public key certificate”（专业的解释看“这里”）。
CA 是“Certificate Authority”的缩写，也叫“证书授权中心”。（专业的解释看维基百科“这里”）
CA就是⽹络世界⾥的公安局、公证中⼼，具有极⾼的可信度，所以由它来给各个公钥签名，信任的⼀⽅签发的证书，那必然证书也是被信任的。
它是负责管理和签发证书的第三方机构，就好比例子里面的中介——C 公司。
一般来说，CA 必须是所有行业和所有公众都信任的、认可的。
因此它必须具有足够的权威性。就好比A、B两公司都必须信任 C 公司，才会找 C 公司作为公章的中介。
CA 证书，顾名思义，就是CA颁发的证书。
公章C信任公章A。证书间的信任关系，就和这个类似。就是用一个证书来证明另一个证书是真实可信滴。
证书之间的信任关系，是可以嵌套的。比如，C 信任 A1，A1 信任 A2，A2 信任 A3......
这个叫做证书的信任链。只要你信任链上的头一个证书，那后续的证书，都是可以信任滴。

“根证书”的洋文叫“root certificate”
操作系统和浏览器都内置了各大 CA 的根证书
除了根证书，其它证书都要依靠上一级的证书，来证明自己。
那谁来证明“根证书”可靠捏？实际上，根证书自己证明自己是可靠滴（或者换句话说，根证书是不需要被证明滴）。

每个浏览器都有一个根证书库，有的浏览器是采用自主的根证书库，而一些浏览器则采取第三方的根证书库。
而根证书库是下载客户端浏览器时预先加载根证书的合集。

CA 证书的作用
证书就是⽤来告诉客户端，该服务端是否是合法的
◇验证网站是否可信（针对 HTTPS）
  HTTPS 协议除了有加密的机制，还有一套证书的机制。通过证书来确保，某个站点确实就是某个站点。
  有了证书之后，当你的浏览器在访问某个 HTTPS 网站时，会验证该站点上的 CA 证书（类似于验证介绍信的公章）。
◇验证某文件是否可信（是否被篡改）
  通过证书来制作文件的数字签名。
  之所以要签名，是因为签名的作⽤可以避免中间⼈在获取证书时对证书内容的篡改。

⼀个数字证书通常包含了：
    公钥；
    持有者信息；
    证书认证机构（CA）的信息；
    CA 对这份⽂件的数字签名及使⽤的算法；
    证书有效期；

CA 签发证书的过程
⾸先 CA 会把持有者的公钥、⽤途、颁发者、有效时间等信息打成⼀个包，
然后对这些信息进⾏ Hash 计算，得到⼀个 Hash 值；
然后 CA 会使⽤⾃⼰的私钥将该 Hash 值加密，⽣成 Certificate Signature，也就是 CA 对证书做了签名；
最后将 Certificate Signature 添加在⽂件证书上，形成数字证书；完整地证明公钥关联的各种信息
数字证书的作用是证明证书中列出的用户合法拥有证书中列出的公开密钥。

客户端校验服务端的数字证书的过程
⾸先客户端会使⽤同样的 Hash 算法 对 持有者的公钥、⽤途、颁发者、有效时间等信息 进行计算 获取该证书的 Hash 值 H1；
通常浏览器和操作系统中集成了 CA 的公钥信息，浏览器收到证书后可以使⽤ CA 的公钥解密 CertificateSignature 内容，得到⼀个 Hash 值 H2 ；
最后⽐较 H1 和 H2，如果值相同，则为可信赖的证书，否则则认为证书不可信。

上网的时候只需要服务器发送来它的证书，就可以验证证书里的签名，顺着证书链（Certficate Chain）一层层地验证，直到找到根证书。
如果服务器返回的是一个证书链，然后操作系统或浏览器就可以使用信任的根证书（根公钥）解析根证书得到一级证书的公钥+摘要验签，
然后拿一级证书的公钥解密一级证书得到二级证书的公钥+摘要验签，
再然后拿二级证书的公钥解密二级证书得到服务器的公钥和摘要验签名，验证过程就此结束！

证书信任链
向 CA 申请的证书⼀般不是根证书签发的，⽽是由中间证书签发的，⽐如百度的证书
根证书
 中间证书
  百度证书

对于这种三级层级关系的证书的验证过程如下：( 一直往上找 上级签发机构 - 根证书清单 - 根证书中的公钥 )
客户端收到 baidu.com 的证书后，发现这个证书的签发者不是根证书，就⽆法根据本地已有的根证书中的公钥去验证 baidu.com 证书是否可信。
于是，客户端根据 baidu.com 证书中的签发者，找到该证书的颁发机构是 “GlobalSign Organization Validation CA - SHA256 - G2”，
然后向 CA 请求该中间证书。
请求到证书后发现 “GlobalSign Organization Validation CA - SHA256 - G2” 证书是由 “GlobalSign Root CA”签发的，
由于 “GlobalSign Root CA” 没有再上级签发机构，说明它是根证书，也就是⾃签证书。
应⽤软件会检查此证书有否已预载于根证书清单上，
如果有，则可以利⽤根证书中的公钥去验证 “GlobalSignOrganization Validation CA - SHA256 - G2” 证书，
如果发现验证通过，就认为该中间证书是可信的。
“GlobalSign Organization Validation CA - SHA256 - G2” 证书被信任后，
可以使⽤ “GlobalSign OrganizationValidation CA - SHA256 - G2” 证书中的公钥去验证 baidu.com 证书的可信性，
如果验证通过，就可以信任baidu.com 证书。

最开始客户端只信任根证书 GlobalSign Root CA 证书的，
由于⽤户信任操作系统或浏览器的软件商，所以由软件商预载了根证书的 GlobalSign 都可被信任。
然后 “GlobalSign Root CA” 证书信任“GlobalSign Organization Validation CA - SHA256 - G2” 证书，
⽽ “GlobalSign Organization Validation CA -SHA256 - G2” 证书⼜信任 baidu.com 证书，
于是客户端也信任 baidu.com 证书。

浏览器从哪些方面验证SSL服务器证书的？
第一，检查SSL 证书是否是由浏览器中“受信任的根证书颁发机构”颁发？
第二，检查SSL证书中的证书吊销列表，检查证书是否被证书颁发机构吊销？
第三，检查此SSL证书是否过期？
第四，检查部署此SSL证书的网站的域名是否与证书中的域名一致？
第五，IE7浏览器会到欺诈网站数据库查询此网站是否已经被列入欺诈网站黑名单？

客户端验证服务端证书分两种情况：（ https://blog.csdn.net/weixin_29200485/article/details/119224297 ）
不使用SAN，那么验证证书的common name和URL的主机名一致。
主机名是否是common name中的一个。
使用SAN，那么验证证书的SAN值和URL的主机名一致。
主机名是否就是SAN值中的一个。

所有用户在使用自己的证书之前必须先下载根证书。
CRL是经过CA签名的证书作废列表，用于证书冻结和撤销。
一般来说证书中有CRL地址，供HTTP或者LDAP方式访问，通过解析可得到CRL地址，
然后下载CRL进行验证。

如果用户手机中安装了一个恶意证书，那么就可以通过中间人攻击的方式进行窃听用户通信以及修改request（请求）或者response（答复，响应）中的数据。
防护办法：
1 公钥锁定
将证书公钥写入客户端apk中，https通信时检查服务端传输时证书公钥与apk中是否一致。
2 证书锁定：
即为客户端颁发公钥证书存放在手机客户端中，在https通信时，在客户端代码中固定去取证书信息，不是从服务端中获取。

什么是中间证书？
为了保护根证书，CAs通常会颁发所谓的中间根。CA使用它的私钥对中间根签名，使它受到信任。然后CA使用中间证书的私钥签署和颁发终端用户SSL证书。
SSL证书包括三张，分别是根证书、ssl中间证书、客户端证书，他们三者构成了一个完整的证书链，可谓缺一不可。
一般情况下根证书是通过浏览器内嵌自带的，用户无需考虑，
而我们通常下载下来的ssl证书即是客户端证书，需要我们配置到自己的服务器中去。
当配置好客户端证书后，可以通过导出中间证书导入到服务器上面去。如果导出失败，可以在网站上下载一个中间证书。

为什么需要中间根证书？
保护根证书。如果直接采用根证书签发证书，一旦发生根证书泄露，将造成极大的安全问题。
所以目前根证书都要求离线保存，如果需要用根证书签名，则必须通过人手工方式，直接用根证书在线签发证书是不允许的。
区分不同类型的产品。针对DV,OV,EV等不同类型，不同安全级别的证书，CA会采用不同的根证书，
一来便于区分，二来一旦出现问题，也便于区别处理，降低影响。中间CA证书一般都是支持在线签发证书的。
交叉验证。为了获得更好的兼容性，支持一些很古老的浏览器。

世界上知名的 CA 没有几家，如 DigiCert、VeriSign、Entrust、Let`s Encrypt 等，
它们签发的证书分为三种，区别在于其可信程度。
DV 是最低的，只是域名级别的可信，背后是谁不知道。
EV 是最高的，经过了法律和审计的严格核查，可以证明网站拥有者的身份